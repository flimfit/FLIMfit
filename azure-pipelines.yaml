# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- 6.0

pr:
- master

jobs:
- job: Build
  timeoutInMinutes: 360

  strategy:
    matrix:

      mac:
        agentOs: Darwin
        buildPlatform: 'osx'
        setupCommand: brew install ninja ghostscript platypus coreutils llvm
        buildCommand: './BuildFLIMfit.sh'

      windows:
        agentOs: Windows_NT
        buildPlatform: 'windows'
        setupCommand: ''
        buildCommand: | 
          .\build-mex.bat
          .\build-flimfit.bat


  variables:
    VCPKG_ROOT: '$(Build.SourcesDirectory)/env/vcpkg'
    archiveFile: '$(Build.ArtifactStagingDirectory)/flimfit-$(buildPlatform).zip'

  pool:
    name: Default
    demands: 
    - Matlab2018b
    - Agent.OS -equals $(agentOs)

  steps:

  - script: $(setupCommand)
    displayName: 'Setup environment'

  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific'
      project: 'FLIMfit'
      pipeline: 'FLIMfit vcpkg'
      specificBuildWithTriggering: true
      buildVersionToDownload: 'latestFromBranch'
      allowPartiallySucceededBuilds: true
      branchName: 'refs/heads/master'
      artifactName: 'flimfit-env-$(buildPlatform)'
      downloadPath: '$(System.ArtifactsDirectory)' 

  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(System.ArtifactsDirectory)/**/*.zip' 
      destinationFolder: '$(Build.SourcesDirectory)/env'
      cleanDestinationFolder: true

  - script: $(buildCommand)
    displayName: 'Build FLIMfit'
